Part1:
Use Company_SD

Index   
1.	Create an index on column (Hiredate) that allow u to cluster the data in the table Department. What will happen?  
2.	Create an index that allows you to enter unique ages in the student table. What will happen?  
3.	create a non-clustered index on column(Dept_Manager) that allows you to enter a unique instructor id in the table Department.  
Part 2: XML in SQL Server
Consider the following XML data representing sales:

xml
Copy code
<sales>
    <sale>
        <saleID>1</saleID>
        <saleDate>2023-01-01</saleDate>
        <region>North</region>
        <product>ProductA</product>
        <amount>100.00</amount>
    </sale>
    <sale>
        <saleID>2</saleID>
        <saleDate>2023-01-02</saleDate>
        <region>South</region>
        <product>ProductB</product>
        <amount>200.00</amount>
    </sale>
    <!-- More sales -->
</sales>
Write a query to extract and display all sales from the above XML.

Write a query to extract the total sales amount from the above XML.

Part 3: JSON in SQL Server
Consider the following JSON data representing sales:

json
Copy code
{
    "sales": [
        {
            "saleID": 1,
            "saleDate": "2023-01-01",
            "region": "North",
            "product": "ProductA",
            "amount": 100.00
        },
        {
            "saleID": 2,
            "saleDate": "2023-01-02",
            "region": "South",
            "product": "ProductB",
            "amount": 200.00
        }
    ]
}
Write a query to extract and display all sales from the above JSON.

Write a query to extract the total sales amount from the above JSON.